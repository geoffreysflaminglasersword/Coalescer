import autoPreprocess from "svelte-preprocess";
import babel from "@rollup/plugin-babel";
import commonjs from "@rollup/plugin-commonjs";
import css from 'rollup-plugin-css-only';
import json from '@rollup/plugin-json';
import resolve from "@rollup/plugin-node-resolve";
import svelte from 'rollup-plugin-svelte';
import typescript from "@rollup/plugin-typescript";

// import replace from "@rollup/plugin-replace";


// import { env } from "process";


const isProd = (process.env.BUILD === 'production');

const banner =
    `/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/
`;

export default {
    input: 'src/main.ts',
    output: {
        file: "main.js",
        format: "cjs",
        sourcemap: 'inline',
        sourcemapExcludeSources: isProd,
        exports: 'default',
        banner,
    },
    external: ['obsidian', 'fs', 'os', 'path'],
    plugins: [
        typescript(),
        babel({
            presets: ["@babel/preset-react", "@babel/preset-typescript"],
        }),
        svelte({
            include: 'src/**/*.svelte',
            preprocess: autoPreprocess(),
            emitCss: false,
        }),
        resolve({ browser: true, dedupe: ["svelte"] }),

        commonjs( /* { sourceMap: false } */ ),
        json(),
    ]
};